<archimate:Goal
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="I-13 - Monitasoinen suojaaminen koko elinkaaren ajan - Ohjelmistojen suojaaminen verkkohyökkäyksiltä"
    id="id-80eb4b86e0cb493c85f14b676894974b"
    documentation="Vaatimus&#xA;&#xA;1. Tietojenkäsittely-ympäristön turvallisuus, myös niiden tekniset ja muut kuin tekniset turvatoimet, testataan hyväksymisprosessin aikana sen varmistamiseksi, että asianmukainen turvaamistaso saavutetaan, ja sen tarkistamiseksi, että ne on moitteettomasti toteutettu, integroitu ja konfiguroitu.&#xA;2. Tietoturvallisuutta vaarantavia verkkohyökkäyksiä vastaan suojaudutaan ja suojauksista sekä niiden toiminnasta huolehditaan tietojenkäsittely-ympäristön elinkaaren ajan.&#xA;&#xA;Lähde (906/2019&#xA;ja/tai 1101/2019)&#xA;1. 906/2019 13 §&#xA;2. 1101/2019 11 §:n k 2&#xA;Lähde (2013/488/EU)&#xA;1. IV liitteen 8, 9, 10, 16, 19 ja 33 kohdat&#xA;2. IV liitteen 10, 11 ja 19 kohdat&#xA;&#xA;Lisätietoja&#xA;&#xA;Yleistä: Ohjelmistot ja niiden käyttötarkoitukset eri tietojenkäsittely-ympäristöissä eroavat toisistaan merkittävästi. Vastaavasti myös tarpeet ohjelmistojen turvalliseen toteutukseen ja käyttöönottoon eroavat merkittävästi eri tietojenkäsittely-ympäristöissä ja käyttötarkoituksissa. Esimerkiksi kaikista verkoista fyysisesti eriytetyssä työasemassa käytettävän toimisto-ohjelmiston turvallisuudelle asetettavat tarpeet eroavat tarpeista, jotka kohdistuvat useiden käyttäjien saavutettavissa olevaan asianhallintajärjestelmään.&#xA;&#xA;Ohjelmistoihin liittyviä riskejä ja turvallisuustarpeita voidaan arvioida esimerkiksi ohjelmiston käyttötarkoituksen ja sen turvallisuutta mahdollisesti toteuttavan roolin, hyökkäyspinta-alan, sekä käsiteltävien tietojen luonteen ja turvallisuusluokan avulla. Mikäli ohjelmiston käyttötarkoituksena ja roolina on toimia esimerkiksi pääsyä rajaavana mekanismina turvallisuusluokiteltujen tietojen käsittelyssä, ohjelmiston luotettavasta toiminnasta tulisi pystyä varmistumaan. Ohjelmistoon kohdistuva hyökkäyspinta-ala voi vaikuttaa oleellisesti ohjelmistoon kohdistuviin turvallisuustarpeisiin. Tyypillisesti esimerkiksi turvallisuusluokan IV palvelut voivat olla saavutettavissa laajemmin ja heterogeenisemmän joukon toimesta, kuin esimerkiksi turvallisuusluokkien III-II palvelut. Ohjelmistoille asetettavat turvallisuusvaatimukset voivatkin olla turvallisuusluokan IV järjestelmissä joiltain osin tiukempia kuin esimerkiksi sellaisissa tiukasti eristetyissä ja suppeissa korkeamman turvallisuusluokan järjestelmissä, joissa jokaisella käyttäjällä on tiedonsaantitarve (need-to-know) kaikkeen järjestelmässä käsiteltävään tietoon. Käsiteltävien tietojen turvallisuusluokka ja oletettu kiinnostavuus ulkopuolisille toimijoille voi vaikuttaa ohjelmistoon kohdistuvaan riskiin ja suojaustarpeisiin. Esimerkiksi poliittisesti suuren ulkopuolisen kiinnostuksen kohteena olevat tiedot, tai korkealle turvallisuusluokitellut tiedot, voivat vaikuttaa merkittävästi ohjelmistoon kohdistuviin riskeihin ja turvallisuustarpeisiin myös kaikkein edistyneimpiin hyökkäyksiin varautumisessa.&#xA;&#xA;Otettaessa käyttöön valmisohjelmistoa sekä tilattaessa räätälöityä tai itse tuotettua ohjelmistoa on tilaajan jo suunnitteluvaiheessa kiinnitettävä huomiota ohjelmiston ja sen käyttämien oheiskomponenttien tietoturvalliseen kehitykseen. Huomiota on kiinnitettävä myös muihin koko ohjelmiston elinkaaren kattaviin tekijöihin. Tekijöitä ovat esimerkiksi käyttöönotonaikaiset vaatimukset, sopimustekniikka, päivityskäytännöt ja muutostenhallinta. Turvallisuusluokitellun tiedon suojaukseen oleellisesti vaikuttavat ohjelmistot on toteutettava turvallisen ohjelmistokehityksen käytäntöihin nojautuen, kattaen sekä ohjelmistokoodin laadun että ohjelmistokehityksen prosessit.&#xA;&#xA;Ohjelmiston vaatimusmäärittelyssä tulee jo hankintavaiheessa huomioida lainsäädännöstä johdetut vaatimukset. Erityisesti salauksiin (I-12), hallintaliittymiin (I-04), käyttäjähallintaan ja -tunnistukseen (I-06, I-07), kovennuksiin (I-08) ja jäljitettävyyteen (lokitukseen, I-10) liittyvät kokonaisuudet tulee huomioida myös ohjelmistojen toteutuksissa. Ohjelmistojen toteutukset eivät saa vaarantaa tiedonsaantitarpeen (need-to-know) toteutumista, tai tarjota ulkopuolisille toimijoille pääsyä suojattavaan tietojenkäsittely-ympäristöön tai sen osakokonaisuuksiin. Elinkaaren vaiheissa tulee varmistua erityisesti ohjelmistokorjausten tekemisen vastuutuksista, sekä mahdollistettava ohjelmiston turvallisuuden ylläpito myös uusia hyökkäystekniikoita vasten. Myös valmisohjelmistojen riittävästä laadusta voidaan pyrkiä varmistumaan vastaavia periaatteita noudattaen.&#xA;&#xA;Joskus voi tulla tarve käyttää palveluita, joiden ohjelmakoodin ja sen kehityskäytäntöjen näkyvyys on heikkoa tai jopa olematonta. Tällaisten ohjelmistojen luotettavuudesta voidaan pyrkiä saamaan näyttöä esimerkiksi tutkimalla päivitystiheyksiä, dokumentaatiota ja mahdollista muuta näkyvyyttä, kuten olemassa olevia testiraportteja. Tällaisissa tilanteissa voi turvallisen konfiguroinnin lisäksi hyödyntää myös korvaavia suojauksia. Turvallisessa konfiguroinnissa ja korvaavina suojauksina voi tietyin rajoituksin hyödyntää esimerkiksi tehostettua havainnointikykyä, kovennuksia, koodin suorituksenaikaista rajoittamista (esim. AppLocker, SELinux, AppArmor), sovelluspalomuureja (WAF), sekä koko ohjelmiston loogista eriyttämistä esimerkiksi virtualisointia hyödyntäen.&#xA;&#xA;Ohjelmistojen turvallisuudesta varmistumiseen tulee hyödyntää aihepiirin tarkentavia ohjeita ja standardeja. Näitä ovat esimerkiksi VAHTI Sovelluskehityksen tietoturvaohje (VAHTI 1/2013), OWASP Application Security Verification Standard (ASVS) ja Kyberturvallisuuskeskuksen ohje ”Turvallinen tuotekehitys: kohti hyväksyntää”.&#xA;&#xA;Toteutusesimerkki:&#xA;1. Ohjelmistojen (sovellukset, palvelut, järjestelmät) käyttötarkoitukset ja ohjelmistojen turvallisuutta mahdollisesti toteuttavat roolit on tunnistettu.&#xA;2. Ohjelmistojen (sovellukset, palvelut, järjestelmät) turvallisuustarpeet on arvioitu, huomioiden erityisesti ohjelmiston käyttötarkoituksen ja sen turvallisuutta mahdollisesti toteuttavan roolin, hyökkäyspinta-alan, sekä käsiteltävien tietojen luonteen ja turvallisuusluokan.&#xA;3. Ohjelmistojen (sovellukset, palvelut, järjestelmät) riippuvuudet ja rajapinnat on tunnistettu. Riippuvuuksiin ja rajapintoihin on kohdistettu ohjelmistoa vastaavat vaatimukset, huomioiden esimerkiksi käytetyt kirjastot, rajapinnat (API:t) ja laitteistosidonnaisuudet. Vaatimuksissa on huomioitu sekä palvelin- että asiakaspuolen osuudet.&#xA;4. Kriittiset ohjelmistot (sovellukset, palvelut, järjestelmät) toteutetaan tai toteutus tarkastetaan mahdollisuuksien mukaan luotettavaa standardia vasten tai/ja turvallisen ohjelmoinnin ohjetta hyödyntäen.&#xA;5. On varmistettu, että ohjelmistojen (sovellukset, palvelut, järjestelmät) ohjelmakoodin laadun ylläpito, kehitys ja muutoshallinta vastaavat tarpeita koko elinkaaren ajan.&#xA;6. On varmistettu, että ohjelmistot (sovellukset, palvelut, järjestelmät) täyttävät lainsäädännöstä johdetut vaatimukset. Erityisesti huomioitava salauksiin (I-12), hallintaliittymiin (I-04), käyttäjähallintaan ja -tunnistukseen (I-06, I-07), kovennuksiin (I-08) ja jäljitettävyyteen (lokitukseen, I-10) liittyvät kokonaisuudet.&#xA;&#xA;Muita lisätietoja: CIS Critical Security Controls (v7.1) / 2; CIS Critical Security Controls (v7.1) / 18; BSI IT-Grundschutz-Compendium Edition 2019; CPNI - Development and Implementation of Secure Web Applications; OWASP Application Security Verification Standard Project (ASVS); CWE TOP 25 Most Dangerous Software Errors; The Building Security In Maturity Model; Software Assurance Maturity Model; SFS-EN ISO/IEC 27002:2017 14.1.1, 14.1.2, 14.1.3, 14.2.8, 14.2.9; VAHTI 1/2013; Turvallinen tuotekehitys: kohti hyväksyntää; PiTuKri MH-02"/>
